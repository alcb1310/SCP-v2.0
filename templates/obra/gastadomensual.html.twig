{% extends "base.html.twig" %}

{% block body %}
     <div class="row row-cols1 m-4 p-4">
          <div class="form-group">
               <select name="obra" id="js-obra" class="form-select">
                    <option value="">--- Seleccione una obra ---</option>
                    {% for obra in obras %}
                         <option value="{{ obra.id }}">{{ obra.nombre }}</option>
                    {% endfor %}
               </select>
               <div class="mt-3">
                    <a href="{{ path('obra_show') }}" class="btn btn-primary float-end ms-3">Regresar</a>
                    <button type="button" class="btn btn-primary float-end " onclick="buscaDatos();">Buscar</button>
               </div>
          </div>
     </div>
     <div class="row row-cols-1 m-4 p-4 border border-2 border-dark d-none" id="js-chart-display">
          <div class="col">
               <canvas id="myChart" style="width:100%;" ></canvas>
          </div>
     </div>
{% endblock %}

{% block javascripts %}
     {{ parent() }}

     {# import for using charts  #}
     <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
     <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js" integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=" crossorigin="anonymous"></script>
     <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
     <script>

          const xValuesGastado =[];
          const yDataGastado=[];

          async function buscaDatos() {
               window.selectedObra=$("#js-obra").children("option:selected").val();

               if (selectedObra === ""){
                    alert ("Seleccione una obra");
                    return;
               }
               //console.log(selectedObra);
               data = await getInfo(selectedObra);
               for (let i=0; i<data.data.length; i++){
                    xValuesGastado.push(data.data[i].year + "/" + data.data[i].month);
                    yDataGastado.push(data.data[i].total);
               }

               createChart();
               document.getElementById('js-chart-display').classList.remove('d-none');

          }

          function getInfo(obra){
               return axios.get('/obra/gasto/'+obra);
          }

          function createChart(){
               new Chart("myChart", {
                    type: "line",
                    data: {
                         label: "Gastado",
                         labels: xValuesGastado,
                         datasets: [{
                              label: "Gasto mensual",
                              borderColor: Math.floor(Math.random()*16777215).toString(16),
                              fill: false,
                              data: yDataGastado
                         }]
                    },
                    options: {
                         title: {
                              display: true,
                              text: "Gasto Mensual"
                         },
                         legend: {
                              display: true,
                              position: 'right',
                              labels:{
                                   fontcolor: "#006699"
                              }
                         }
                    }
               });
          }
     </script>
{% endblock %}

{% block stylesheets %}
     {{ parent() }}
{% endblock %}